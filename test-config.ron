#![enable(implicit_some)]
// OXWM Configuration File
// Edit this file and reload with Mod+Shift+R (no compilation needed!)

#DEFINE $terminal = "alacritty"
#DEFINE $color_blue = 0x6dade3
#DEFINE $color_grey = 0xbbbbbb
#DEFINE $color_green = 0x9ece6a
#DEFINE $color_red = 0xf7768e
#DEFINE $color_cyan = 0x0db9d7
#DEFINE $color_purple = 0xad8ee6
#DEFINE $color_lavender = 0xa9b1d6
#DEFINE $color_bg = 0x1a1b26
#DEFINE $color_fg = 0xbbbbbb
#DEFINE $color_light_blue = 0x7aa2f7

(
    border_width: 2,
    border_focused: $color_blue,
    border_unfocused: $color_grey,
    font: "JetBrainsMono Nerd Font:style=Bold:size=12",

    gaps_enabled: true,
    gap_inner_horizontal: 5,
    gap_inner_vertical: 5,
    gap_outer_horizontal: 5,
    gap_outer_vertical: 5,

    terminal: $terminal,
    modkey: Mod1,
    tags: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],

    // Alternative icon tags (uncomment to use):
    // tags: ["", "󰊯", "", "", "󰙯", "󱇤", "", "󱘶", "󰧮"],

    // Alternative text tags (uncomment to use):
    // tags: ["DEV", "WWW", "SYS", "DOC", "VBOX", "CHAT", "MUS", "VID", "MISC"],

    layout_symbols: [
        (name: "tiling", symbol: "[T]"),
        (name: "normie", symbol: "[F]"),
    ],

    keybindings: [
    // Swith to horizontal scroll layout
    (modifiers: [Mod4], key: H, action: ChangeLayout, arg: "horizontal_scroll"),

    // Scroll with arrows
    (modifiers: [Mod4], key: Left, action: ScrollLeft),
    (modifiers: [Mod4], key:  Right, action: ScrollRight),

    // Or vim-style
    (modifiers: [Mod4, Control], key: H, action: ScrollLeft),
    (modifiers: [Mod4, Control], key: L, action: ScrollRight),
        (modifiers: [Mod1], key: Return, action: Spawn, arg: $terminal),
        (modifiers: [Mod1], key: D, action: Spawn, arg: ["sh", "-c", "dmenu_run -l 10"]),
        (modifiers: [Mod1], key: S, action: Spawn, arg: ["sh", "-c", "maim -s | xclip -selection clipboard -t image/png"]),
        (modifiers: [Mod1], key: Q, action: KillClient),
        (modifiers: [Mod1, Shift], key: F, action: ToggleFullScreen),
        (modifiers: [Mod1, Shift], key: Space, action: ToggleFloating),
        (modifiers: [Mod1], key: F, action: ChangeLayout, arg: "normie"),
        (modifiers: [Mod1], key: C, action: ChangeLayout, arg: "tiling"),
        (modifiers: [Mod1], key: N, action: CycleLayout),
        (modifiers: [Mod1], key: A, action: ToggleGaps),
        (modifiers: [Mod1, Shift], key: Q, action: Quit),
        (modifiers: [Mod1, Shift], key: R, action: Restart),
        (modifiers: [Mod1], key: J, action: FocusStack, arg: -1),
        (modifiers: [Mod1], key: K, action: FocusStack, arg: 1),
        // Exchange client (vim-style with Mod+Shift)
        (modifiers: [Mod1, Control], key: K, action: SmartMoveWin, arg: 0), // UP
        (modifiers: [Mod1, Control], key: J, action: SmartMoveWin, arg: 1), // DOWN
        (modifiers: [Mod1, Control], key: H, action: SmartMoveWin, arg: 2), // LEFT
        (modifiers: [Mod1, Control], key: L, action: SmartMoveWin, arg: 3), // RIGHT
        (modifiers: [Mod1, Shift], key: K, action: ExchangeClient, arg: 0), // UP
        (modifiers: [Mod1, Shift], key: J, action: ExchangeClient, arg: 1), // DOWN
        (modifiers: [Mod1, Shift], key: H, action: ExchangeClient, arg: 2), // LEFT
        (modifiers: [Mod1, Shift], key: L, action: ExchangeClient, arg: 3), // RIGHT
        (modifiers: [Mod1], key: Key1, action: ViewTag, arg: 0),
        (modifiers: [Mod1], key: Key2, action: ViewTag, arg: 1),
        (modifiers: [Mod1], key: Key3, action: ViewTag, arg: 2),
        (modifiers: [Mod1], key: Key4, action: ViewTag, arg: 3),
        (modifiers: [Mod1], key: Key5, action: ViewTag, arg: 4),
        (modifiers: [Mod1], key: Key6, action: ViewTag, arg: 5),
        (modifiers: [Mod1], key: Key7, action: ViewTag, arg: 6),
        (modifiers: [Mod1], key: Key8, action: ViewTag, arg: 7),
        (modifiers: [Mod1], key: Key9, action: ViewTag, arg: 8),
        (modifiers: [Mod1, Shift], key: Key1, action: MoveToTag, arg: 0),
        (modifiers: [Mod1, Shift], key: Key2, action: MoveToTag, arg: 1),
        (modifiers: [Mod1, Shift], key: Key3, action: MoveToTag, arg: 2),
        (modifiers: [Mod1, Shift], key: Key4, action: MoveToTag, arg: 3),
        (modifiers: [Mod1, Shift], key: Key5, action: MoveToTag, arg: 4),
        (modifiers: [Mod1, Shift], key: Key6, action: MoveToTag, arg: 5),
        (modifiers: [Mod1, Shift], key: Key7, action: MoveToTag, arg: 6),
        (modifiers: [Mod1, Shift], key: Key8, action: MoveToTag, arg: 7),
        (modifiers: [Mod1, Shift], key: Key9, action: MoveToTag, arg: 8),
    ],

    status_blocks: [
        // Battery block (shows charging/discharging status)
        (
            format: "",
            command: "Battery",
            battery_formats: (
                charging: "󰂄 Bat: {}%",
                discharging: "󰁹 Bat:{}%",
                full: "󰁹 Bat: {}%",
            ),
            interval_secs: 30,
            color: $color_green,
            underline: true,
        ),

        // Separator
        (
            format: " │  ",
            command: "Static",
            interval_secs: 18446744073709551615,
            color: $color_lavender,
            underline: false,
        ),

        // RAM usage
        (
            format: "󰍛 {used}/{total} GB",
            command: "Ram",
            interval_secs: 5,
            color: $color_light_blue,
            underline: true,
        ),

        // Separator
        (
            format: " │  ",
            command: "Static",
            interval_secs: 18446744073709551615,
            color: $color_lavender,
            underline: false,
        ),

        // Kernel version
        (
            format: " {}",
            command: "Shell",
            command_arg: "uname -r",
            interval_secs: 18446744073709551615,
            color: $color_red,
            underline: true,
        ),

        // Separator
        (
            format: " │  ",
            command: "Static",
            interval_secs: 18446744073709551615,
            color: $color_lavender,
            underline: false,
        ),

        // Date and time
        (
            format: "󰸘 {}",
            command: "DateTime",
            command_arg: "%a, %b %d - %-I:%M %P",
            interval_secs: 1,
            color: $color_cyan,
            underline: true,
        ),
    ],

    scheme_normal: (foreground: $color_fg, background: $color_bg, underline: 0x444444),
    scheme_occupied: (foreground: $color_cyan, background: $color_bg, underline: $color_cyan),
    scheme_selected: (foreground: $color_cyan, background: $color_bg, underline: $color_purple),
)

